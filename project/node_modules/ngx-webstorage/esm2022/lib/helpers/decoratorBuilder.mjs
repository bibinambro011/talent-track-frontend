import { StrategyIndex } from '../services/strategyIndex';
import { StorageKeyManager } from './storageKeyManager';
import { noop } from './noop';
class DecoratorBuilder {
    static buildSyncStrategyDecorator(strategyName, prototype, propName, key, defaultValue = null) {
        const rawKey = key || propName;
        let storageKey;
        Object.defineProperty(prototype, propName, {
            get: function () {
                let value;
                StrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);
                return value === undefined ? defaultValue : value;
            },
            set: function (value) {
                StrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);
            }
        });
        function getKey() {
            if (storageKey !== undefined)
                return storageKey;
            return storageKey = StorageKeyManager.normalize(rawKey);
        }
    }
}
export { DecoratorBuilder };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdG9yQnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC13ZWJzdG9yYWdlL3NyYy9saWIvaGVscGVycy9kZWNvcmF0b3JCdWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBRTVCLE1BQU0sZ0JBQWdCO0lBRXJCLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxZQUF3QyxFQUFFLFNBQVMsRUFBRSxRQUFnQixFQUFFLEdBQVksRUFBRSxlQUFvQixJQUFJO1FBQzlJLE1BQU0sTUFBTSxHQUFXLEdBQUcsSUFBSSxRQUFRLENBQUM7UUFDdkMsSUFBSSxVQUFrQixDQUFDO1FBRXZCLE1BQU0sQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRTtZQUMxQyxHQUFHLEVBQUU7Z0JBQ0osSUFBSSxLQUFVLENBQUM7Z0JBQ2YsYUFBYSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQztnQkFDcEYsT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUNuRCxDQUFDO1lBQ0QsR0FBRyxFQUFFLFVBQVMsS0FBSztnQkFDbEIsYUFBYSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RFLENBQUM7U0FDRCxDQUFDLENBQUM7UUFFSCxTQUFTLE1BQU07WUFDZCxJQUFJLFVBQVUsS0FBSyxTQUFTO2dCQUFFLE9BQU8sVUFBVSxDQUFDO1lBQ2hELE9BQU8sVUFBVSxHQUFHLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6RCxDQUFDO0lBQ0YsQ0FBQztDQUNEO0FBRUQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmF0ZWd5SW5kZXh9IGZyb20gJy4uL3NlcnZpY2VzL3N0cmF0ZWd5SW5kZXgnO1xuaW1wb3J0IHtTdG9yYWdlU3RyYXRlZ2llc30gZnJvbSAnLi4vY29uc3RhbnRzL3N0cmF0ZWd5JztcbmltcG9ydCB7U3RvcmFnZUtleU1hbmFnZXJ9IGZyb20gJy4vc3RvcmFnZUtleU1hbmFnZXInO1xuaW1wb3J0IHtub29wfSBmcm9tICcuL25vb3AnO1xuXG5jbGFzcyBEZWNvcmF0b3JCdWlsZGVyIHtcblxuXHRzdGF0aWMgYnVpbGRTeW5jU3RyYXRlZ3lEZWNvcmF0b3Ioc3RyYXRlZ3lOYW1lOiBzdHJpbmcgfCBTdG9yYWdlU3RyYXRlZ2llcywgcHJvdG90eXBlLCBwcm9wTmFtZTogc3RyaW5nLCBrZXk/OiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogYW55ID0gbnVsbCkge1xuXHRcdGNvbnN0IHJhd0tleTogc3RyaW5nID0ga2V5IHx8IHByb3BOYW1lO1xuXHRcdGxldCBzdG9yYWdlS2V5OiBzdHJpbmc7XG5cblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG90eXBlLCBwcm9wTmFtZSwge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bGV0IHZhbHVlOiBhbnk7XG5cdFx0XHRcdFN0cmF0ZWd5SW5kZXguZ2V0KHN0cmF0ZWd5TmFtZSkuZ2V0KGdldEtleSgpKS5zdWJzY3JpYmUoKHJlc3VsdCkgPT4gdmFsdWUgPSByZXN1bHQpO1xuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IHZhbHVlO1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdFx0U3RyYXRlZ3lJbmRleC5nZXQoc3RyYXRlZ3lOYW1lKS5zZXQoZ2V0S2V5KCksIHZhbHVlKS5zdWJzY3JpYmUobm9vcCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRmdW5jdGlvbiBnZXRLZXkoKSB7XG5cdFx0XHRpZiAoc3RvcmFnZUtleSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gc3RvcmFnZUtleTtcblx0XHRcdHJldHVybiBzdG9yYWdlS2V5ID0gU3RvcmFnZUtleU1hbmFnZXIubm9ybWFsaXplKHJhd0tleSk7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCB7RGVjb3JhdG9yQnVpbGRlcn07XG4iXX0=